@using System.Security.Claims;
@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Primary">
        
        <MudLink Color="Color.Inherit" Underline="Underline.None" Href="/">JWt Auth Demo</MudLink>
        <AuthorizeView>
            <Authorized>
                <MudLink Color="Color.Inherit" Underline="Underline.None" Class="ml-2" Href="/fetchdata">Wether ForeCast</MudLink>
            </Authorized>
        </AuthorizeView>
        <MudSpacer/>
        <AuthorizeView>
            <Authorized>
                <span>@UserDisplyaName(context.User.Claims.ToList())</span>
            </Authorized>
            <NotAuthorized>
                <MudLink Color="Color.Inherit" Underline="Underline.None" Class="mr-2" Href="/login">Login</MudLink>
                <MudLink Color="Color.Inherit" Underline="Underline.None" Href="/registration">Registration</MudLink>
            </NotAuthorized>
        </AuthorizeView>
        
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>
@code{
    private string UserDisplyaName(List<Claim> claims)
    {
        var firstName = claims.Where(_ => _.Type == "FirstName").Select(_ => _.Value).FirstOrDefault();
        var lastName = claims.Where(_ => _.Type == "LastName").Select(_ => _.Value).FirstOrDefault();
        if(!string.IsNullOrEmpty(firstName) || !string.IsNullOrEmpty(lastName))
        {
            return $"{firstName}  {lastName}";
        }
        var email = claims.Where(_ => _.Type == "Email").Select(_ => _.Value).FirstOrDefault();
        return email;
    }
}